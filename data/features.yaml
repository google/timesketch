# Config file for the feature extraction analyzer.
# A feature extraction definition looks like this:
# name:
#       # Define either a query_string or query_dsl.
#       query_string: *
#       query_dsl:
#       # Mandatory fields.
#       attribute:
#       store_as:
#       re:
#       # Optional fields.
#       re_flags: []
#       emojis: []
#       tags: []
#       create_view: False
#       aggregate: False
#       overwrite_store_as: True
#       overwrite_and_merge_store_as: False
#       store_type_list: False
#       keep_multimatch: False
#
# Each definition needs to define either a query_string or a query_dsl.
#
# re_flags is a list of flags as strings from the re module. These include:
# - DEBUG
# - DOTALL
# - IGNORECASE
# - LOCALE
# - MULTILINE
# - TEMPLATE
# - UNICODE
# - VERBOSE
#
# The fields tags and emojis are optional.
#
# The field store_as defines the name of the attribute the feature is
# stored as.
#
# The create_view is an optional boolean that determines whether a view
# should be created if there are hits.
#
# The aggregate is an optional boolean that determines if we want to
# create an aggregation of the results and store it (ATM this does
# nothing, but once aggregations are supported it will).
#
# The overwrite_store_as is an optional boolean that determines if
# we want to overwrite the field store_as if it already exists.
#
# The overwrite_and_merge_store_as is an optional boolean that determines
# if we want to overwrite the field store_as and merge the existing values.
#
# The store_type_list is an optional boolean that determines if we want to
# store the extracted data in List type (default is text).
#
# The keep_multimatch is an optional boolean that determines if we want to
# store all matching results (default store first result).
#
# The feature extraction works in the way that the query is run, and
# the regular expression is run against the attribute to extract a value.
# The first value extracted is then stored inside the "store_as" attribute.
# If there are emojis or tags defined they are also applied to that event.
# In the end, if a view is supposed to be created a view searching for
# the added tag is added (only if there are results).
# ------------------------------------------------------------------------

email_addresses:
        query_string: 'source_short:"WEBHIST"'
        attribute: 'message'
        store_as: 'email_address'
        re: '([a-zA-Z0-9_\.+\-]+@[a-zA-Z0-9\-]+\.[a-zA-Z0-9\-\.]+)'
        re_flags: []
        aggregate: True

gmail_accounts:
        query_string: 'source_short:"WEBHIST" AND url:"mail.google.com"'
        attribute: 'message'
        store_as: 'found_account'
        re: '[a-zA-Z0-9_\.+\-]+@(gmail|googlemail)\.com'
        re_flags: []
        aggregate: True
        tags: ['gmail-account']
        emojis: ['ID_BUTTON']

github_accounts:
        query_string: 'source_short:"WEBHIST" AND
          url:"https://github.com/users" AND title:"Your Profile"'
        attribute: 'url'
        store_as: 'found_account'
        re: 'https://github.com/users/([A-z-\d]{1,39})'
        re_flags: []
        aggregate: True
        tags: ['github-account']
        emojis: ['ID_BUTTON']

# Linkedin account extraction from profile edit url
linkedin_accounts:
        query_string: 'source_short:"WEBHIST" AND
          url:"https://www.linkedin.com/in/" AND url:"/edit/"'
        attribute: 'url'
        store_as: 'found_account'
        re: 'https://www.linkedin.com/in/([A-z-\d]{5,32})/edit/'
        aggregate: True
        tags: ['linkedin-account']
        emojis: ['ID_BUTTON']

rdp_ts_ipv4_addresses:
        query_string: 'data_type:"windows:evtx:record" AND
          source_name:"Microsoft-Windows-TerminalServices-LocalSessionManager"'
        attribute: 'strings'
        store_as: 'ip_address'
        re: '(?:[0-9]{1,3}\.){3}[0-9]{1,3}'

rdp_rds_ipv4_addresses:
        query_string: 'data_type:"windows:evtx:record" AND
          source_name:"Microsoft-Windows-RemoteDesktopServices-RdpCoreTS"'
        attribute: 'strings'
        store_as: 'client_ip'
        re: '(?:[0-9]{1,3}\.){3}[0-9]{1,3}'

ssh_client_ipv4_addresses:
        query_string: 'reporter:"sshd"'
        attribute: 'message'
        store_as: 'client_ip'
        re: '^\[sshd\] \[\d+\]: Connection from ((?:[0-9]{1,3}\.){3}[0-9]{1,3})
          port \d+ on (?:[0-9]{1,3}\.){3}[0-9]{1,3} port \d+(?: rdomain ? .*)?$'

ssh_client_ipv4_addresses_2:
        query_string: 'reporter:"sshd"'
        attribute: 'message'
        store_as: 'client_ip'
        re: '\[sshd, pid: \d+\] Connection [a-z]+ by
          ((?:[0-9]{1,3}\.){3}[0-9]{1,3}) port \d+'

ssh_host_ipv4_addresses:
        query_string: 'reporter:"sshd"'
        attribute: 'message'
        store_as: 'host_ip'
        re: '^\[sshd\] \[\d+\]: Connection from (?:[0-9]{1,3}\.){3}[0-9]{1,3}
          port \d+ on ((?:[0-9]{1,3}\.){3}[0-9]{1,3}) port \d+(?: rdomain ? .*)?$'

ssh_client_password_ipv4_addresses:
        query_string: 'reporter:"sshd"'
        attribute: 'message'
        store_as: 'client_ip'
        re: '^\[sshd, pid: \d+\] (?:Accepted|Failed) (?:password|publickey) for \w+
          from ((?:[0-9]{1,3}\.){3}[0-9]{1,3}) port \d+'

ssh_disconnected_username:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'username'
        re: '^Disconnected\s+from user (?P<username>[^\s]+) [^\s]+ port \d+$'

ssh_disconnected_ip_address:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'ip_address'
        re: '^Disconnected from user [^\s]+ (?P<ip_address>[^\s]+) port \d+$'

ssh_disconnected_port:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'port'
        re: '^Disconnected from user [^\s]+ [^\s]+ port (?P<port>\d+)$'

ssh_failed_username:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'username'
        re: '^Failed password for (?:invalid user)?\s*(?P<username>[^\s]+) from [^\s]+ port \d+ ssh\d'

ssh_failed_ip_address:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'ip_address'
        re: '^Failed password for (?:invalid user)?\s*[^\s]+ from (?P<ip_address>[^\s]+) port \d+ ssh\d'

ssh_failed_port:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'port'
        re: '^Failed password for (?:invalid user)?\s*[^\s]+ from [^\s]+ port (?P<port>\d+) ssh\d'

ssh_failed_method:
        query_string: 'reporter:"sshd"'
        attribute: 'body'
        store_as: 'authentication_method'
        re: '^Failed (?P<authentication_method>[^\s]+) for .*ssh\d'

win_login_subject_username:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'subject_username'
        re: '.*"SubjectUserName">(?P<subject_username>[^<]+)</Data>'

win_login_subject_domain:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'subject_domain'
        re: '.*"SubjectDomainName">(?P<subject_domain>[^<]+)</Data>'

win_login_subject_logon_id:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'subject_logon_id'
        re: '.*"SubjectLogonId">(?P<subject_logon_id>[^<]+)</Data>'

win_login_username:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'username'
        re: '.*"TargetUserName">(?P<username>[^<]+)</Data>'

win_login_domain:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'domain'
        re: '.*"TargetDomainName">(?P<domain>[^<]+)</Data>'

win_login_logon_id:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'logon_id'
        re: '.*"TargetLogonId">(?P<logon_id>[^<]+)</Data>'

win_login_logon_type:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'logon_type'
        re: '.*"LogonType">(?P<logon_type>[^<]+)</Data>'

win_login_logon_process_name:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'logon_process_name'
        re: '.*"LogonProcessName">(?P<logon_process_name>[^<]+)</Data>'

win_login_workstation_name:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'workstation_name'
        re: '.*"WorkstationName">(?P<workstation_name>[^<]+)</Data>'

win_login_process_id:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'process_id'
        re: '.*"ProcessId">(?P<process_id>[^<]+)</Data>'

win_login_process_name:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'process_name'
        re: '.*"ProcessName">(?P<process_name>[^<]+)</Data>'

win_login_ip_address:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'ip_address'
        re: '.*"IpAddress">(?P<ip_address>[^<]+)</Data>'

win_login_port:
        query_string: 'source_name:Microsoft-Windows-Security-Auditing AND (event_identifier:4624 OR event_identifier:4625)'
        attribute: 'xml_string'
        store_as: 'port'
        re: '.*"IpPort">(?P<port>[^<]+)</Data>'
